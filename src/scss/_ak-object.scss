.ak {
  &-cube {
    display: inline-block;
    width: var(--cube-size, $cube-size);
    height: var(--cube-size, $cube-size);
    backface-visibility: visible;
    transform-style: preserve-3d;
  }

  &-face {
    display: block;
    position: absolute;
    width: var(--cube-size, $cube-size);
    height: var(--cube-size, $cube-size);
    line-height: 2;
    font-family: sans-serif;
    font-size: calc(var(--cube-size, #{$cube-size}) / 2);
    text-align: center;

    color: var(--cube-color, rgba($blue, 0.5));
    background-color: transparent;
    border: var(--cube-border-width, $cube-border-width) solid
      var(--cube-color, rgba($blue, 0.5));
    border-radius: 0.2rem;

    &.front {
      transform: translateZ(calc(var(--cube-size, #{$cube-size}) / 2));
    }

    &.back {
      transform: rotateY(180deg)
        translateZ(calc(var(--cube-size, #{$cube-size}) / 2));
    }

    &.right {
      transform: rotateY(90deg)
        translateZ(calc(var(--cube-size, #{$cube-size}) / 2));
    }

    &.left {
      transform: rotateY(-90deg)
        translateZ(calc(var(--cube-size, #{$cube-size}) / 2));
    }

    &.top {
      transform: rotateX(90deg)
        translateZ(calc(var(--cube-size, #{$cube-size}) / 2));
    }

    &.bottom {
      transform: rotateX(-90deg)
        translateZ(calc(var(--cube-size, #{$cube-size}) / 2));
    }

    &__lines {
      position: absolute;
      top: 0;
      left: 0;
      width: var(--cube-size, #{$cube-size});
      height: var(--cube-size, #{$cube-size});
      box-sizing: content-box;
    }

    &__line- {
      &-tl,
      &-br,
      &-tr,
      &-bl {
        position: absolute;
        left: 0.2rem;
        top: 0.2rem;
        right: 0.2rem;
        bottom: 0.2rem;
        display: inline-block;

        &::before {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          display: inline-block;
          width: calc(var(--cube-size, #{$cube-size}) / 4);
          height: calc(var(--cube-border-width, #{$cube-border-width}) / 2);
          background-color: currentColor;
          transform: rotate(45deg);
          transform-origin: top left;
        }
      }

      &-br {
        transform: rotate(90deg);
      }

      &-tr {
        transform: rotate(180deg);
      }

      &-bl {
        transform: rotate(270deg);
      }
    }
  }
}

.perspective {
  display: block;
  perspective: 100rem;
  perspective-origin: 50% 125%;
}
